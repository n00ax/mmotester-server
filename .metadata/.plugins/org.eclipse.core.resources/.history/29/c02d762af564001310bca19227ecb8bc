package mmotest.mem;

import java.util.HashMap;
import java.util.Vector;
import java.util.concurrent.atomic.AtomicInteger;

public class SharedMemoryAccess {//DataBase Access
	private static Vector<Double> x_coords, y_coords, z_coords, x_delta, y_delta, z_delta,
	player_privelege, model_number, curblock;// FAST CACHE
	private static Vector<Vector<Integer>> blockdata;
	private static HashMap<String, String> usrList;
	private static HashMap<Integer, String> usrmap;
	public SharedMemoryAccess(){
		x_coords = new Vector<Double>();
		y_coords = new Vector<Double>(); 
		z_coords = new Vector<Double>(); 
		x_delta = new Vector<Double>();
		y_delta = new Vector<Double>();
		z_delta = new Vector<Double>();
		player_privelege= new Vector<Double>();
		model_number = new Vector<Double>();
		curblock = new Vector<Double>();
	}
	public static synchronized Double getx(int plid){
		return x_coords.get(plid);
	}
	public static synchronized Double gety(int plid){
		return y_coords.get(plid);
	}
	public static synchronized Double getz(int plid){
		return z_coords.get(plid);
	}
	public static synchronized Double getx_delta(int plid){
		return x_delta.get(plid);
	}
	public static synchronized Double gety_delta(int plid){
		return y_delta.get(plid);
	}
	public static synchronized Double getz_delta(int plid){
		return z_delta.get(plid);
	}
	public static synchronized Double get_player_privlege(int plid){
		return x_delta.get(plid);
	}
	public static synchronized Double get_player_model(int plid){
		return y_delta.get(plid);
	}
	public static synchronized Double get_cur_block(int plid){
		return z_delta.get(plid);
	}
}
